package vista;

import control.ObservadorEventos;
import control.PuntoDeVenta;
import java.awt.Image;
import java.awt.event.FocusEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import utilidades.InvalidException;
import utilidades.Utilidades;

/**
 *
 * @author Kymera Systems SAS
 */
public class Usuarios extends VentanaInternaAbs implements ObservadorEventos {

    private FachadaInterfaz fachada;
    private final ImageIcon icono = new ImageIcon(getClass().getResource("/imagenes/NoPicture.JPG"));
    private boolean allPriviliges;

    public Usuarios() {
        initComponents();
        this.fachada = FachadaInterfaz.getInstancia();
        fachada.ptoVenta.addEscuchadorEventos(this);
        this.cargarComboEmpleados();
        fachada.cargarUsuario(fachada.PRIMERO);
        escuchador();

        int permiso = PuntoDeVenta.usuarioActual.getPermisos();
            switch (permiso) {
                case FachadaInterfaz.ADMINISTRADOR: {
                    this.itmNuevo.setEnabled(true);
                    this.itmEliminar.setEnabled(true);
                    this.allPriviliges = true;
                    break;
                }
                default: {
                    itmNuevo.setEnabled(false);
                    itmEliminar.setEnabled(false);
                    this.allPriviliges = false;
                    break;
                }
            }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbTipo = new javax.swing.JComboBox();
        lblFoto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbPersonal = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtPassw = new javax.swing.JPasswordField();
        txtPassw2 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        navegador1 = new panel.Navegador();
        jButton3 = new javax.swing.JButton();
        barraMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itmNuevo = new javax.swing.JMenuItem();
        itmModificar = new javax.swing.JMenuItem();
        itmEliminar = new javax.swing.JMenuItem();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Tipo...", "ADMINISTRADOR", "CAJERO", "SUPERVISOR", "TECNICO" }));
        cmbTipo.setEnabled(false);
        cmbTipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setFocoGanado(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                setFocoPerdido(evt);
            }
        });

        lblFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/NoPicture.JPG"))); // NOI18N
        lblFoto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setText("Personal");

        jLabel3.setText("Contraseña");

        jLabel4.setText("Tipo Usuario");

        cmbPersonal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPersonal.setEnabled(false);
        cmbPersonal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPersonalItemStateChanged(evt);
            }
        });
        cmbPersonal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setFocoGanado(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                setFocoPerdido(evt);
            }
        });

        jLabel5.setText("Confirmar Contraseña");

        txtPassw.setEnabled(false);
        txtPassw.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setFocoGanado(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                setFocoPerdido(evt);
            }
        });

        txtPassw2.setEnabled(false);
        txtPassw2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setFocoGanado(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                setFocoPerdido(evt);
            }
        });

        jLabel6.setText("FOTO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbTipo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPassw2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPassw, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54)
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(43, 43, 43)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPassw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtPassw2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblFoto))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAceptar.setText("Modificar");
        btnAceptar.setEnabled(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(navegador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelar)
                        .addComponent(btnAceptar))
                    .addComponent(navegador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton3.setText("jButton3");

        jMenu1.setMnemonic('U');
        jMenu1.setText("Usuarios");

        itmNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        itmNuevo.setText("Nuevo Usuario");
        itmNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(itmNuevo);

        itmModificar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        itmModificar.setText("Modificar Actual");
        itmModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmModificarActionPerformed(evt);
            }
        });
        jMenu1.add(itmModificar);

        itmEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        itmEliminar.setText("Eliminar Usuario");
        itmEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(itmEliminar);

        barraMenu.add(jMenu1);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
    private void setFocoGanado(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setFocoGanado
    // TODO add your handling code here:
    }//GEN-LAST:event_setFocoGanado

private void setFocoPerdido(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setFocoPerdido
    // TODO add your handling code here:
}//GEN-LAST:event_setFocoPerdido
     */
private void itmNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNuevoActionPerformed
    this.btnAceptar.setText("Guardar");
    this.limpiar();
    this.habilitarComponentes(true);
}//GEN-LAST:event_itmNuevoActionPerformed

private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
    try {
        if (this.btnAceptar.getText().equalsIgnoreCase("Guardar")) {

            fachada.usuarios(obtenerDatos(), FachadaInterfaz.INSERTAR);

        } else if (this.btnAceptar.getText().equalsIgnoreCase("modificar")) {
            fachada.usuarios(obtenerDatos(), FachadaInterfaz.MODIFICAR);
        }
        this.habilitarComponentes(false);
    } catch (InvalidException ex) {
    }
}//GEN-LAST:event_btnAceptarActionPerformed

private void cmbPersonalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPersonalItemStateChanged
    if (this.cmbPersonal.getSelectedIndex() != -1) {
        this.ponerFoto(cmbPersonal.getSelectedItem());
    }
}//GEN-LAST:event_cmbPersonalItemStateChanged

private void itmModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmModificarActionPerformed
    this.btnAceptar.setText("Modificar");
    this.habilitarComponentes(true);
    this.txtPassw.requestFocus(true);
    this.txtPassw.selectAll();
    this.txtPassw2.setText("");

}//GEN-LAST:event_itmModificarActionPerformed

private void itmEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEliminarActionPerformed
    int resp = JOptionPane.showConfirmDialog(this, "Esta seguro de Eliminar este Usuario?", "Eliminar Usuario - Operacion irrecuperable", JOptionPane.YES_NO_OPTION);
    if (resp == 0) {
        modelo.Personal emp = (modelo.Personal) cmbPersonal.getSelectedItem();
        fachada.usuarios(emp.getCedula(), FachadaInterfaz.ELIMINAR);
    }

}//GEN-LAST:event_itmEliminarActionPerformed

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    this.habilitarComponentes(false);
    fachada.cargarUsuario(fachada.PRIMERO);
}//GEN-LAST:event_btnCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox cmbPersonal;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JMenuItem itmEliminar;
    private javax.swing.JMenuItem itmModificar;
    private javax.swing.JMenuItem itmNuevo;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFoto;
    private panel.Navegador navegador1;
    private javax.swing.JPasswordField txtPassw;
    private javax.swing.JPasswordField txtPassw2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void establecerFoco() {
        cmbPersonal.requestFocus(true);
    }

    @Override
    public void setFocoGanado(FocusEvent evt) {
        if (evt.getSource().equals(this.txtPassw)) {
            this.txtPassw.setBackground(FOCO_GANADO);
        } else if (evt.getSource().equals(this.txtPassw2)) {
            this.txtPassw2.setBackground(FOCO_GANADO);
        } else if (evt.getSource().equals(this.cmbTipo)) {
            this.cmbTipo.setBackground(FOCO_GANADO);
        }
    }

    @Override
    public void setFocoPerdido(FocusEvent evt) {
        if (evt.getSource().equals(this.txtPassw)) {
            this.txtPassw.setBackground(FOCO_PERDIDO);
        } else if (evt.getSource().equals(this.txtPassw2)) {
            this.txtPassw2.setBackground(FOCO_PERDIDO);
        } else if (evt.getSource().equals(this.cmbTipo)) {
            this.cmbTipo.setBackground(FOCO_PERDIDO);
        }
    }

    private void habilitarComponentes(boolean b) {
        this.cmbPersonal.setEnabled(b);
        this.cmbTipo.setEnabled(b);
        this.txtPassw.setEnabled(b);
        this.txtPassw2.setEnabled(b);
        this.btnAceptar.setEnabled(b);
        if (!allPriviliges) {
            this.cmbPersonal.setEnabled(false);
            this.cmbTipo.setEnabled(false);
        }
    }

    private void limpiar() {
        this.cmbPersonal.setSelectedIndex(-1);
        ((ModeloCombo) this.cmbPersonal.getModel()).limpiarSeleccion();
        this.cmbPersonal.getModel().setSelectedItem("Seleccione un Empleado...");
        this.cmbPersonal.updateUI();
        this.cmbTipo.setSelectedIndex(0);
        this.txtPassw.setText("");
        this.txtPassw2.setText("");
        this.ponerFoto(null);
    }

    private List obtenerDatos() throws InvalidException {
        List l = new ArrayList();
        if (((ModeloCombo) this.cmbPersonal.getModel()).getSelectedIndex() != null) {
            l.add(((modelo.Personal)this.cmbPersonal.getSelectedItem()).getCedula());
        } else {
            throw new InvalidException("Seleccione un Empleado");
        }
        if (Utilidades.validarContraseña(this.txtPassw.getText(), this.txtPassw2.getText())) {
            if (Utilidades.validarCaracteres(this.txtPassw.getText(), 4)) {
                l.add(this.txtPassw.getText());
            } else {
                throw new InvalidException("La contraseña debe contener \nminimo 4 caracteres");
            }
        } else {
            throw new InvalidException("Usuario y Contraseña Incorrectas");
        }
        int tipo = this.cmbTipo.getSelectedIndex();
        if (tipo != 0) {
            l.add(this.cmbTipo.getSelectedIndex());
        } else {
            throw new InvalidException("Debe Seleccionar un Tipo de Usuario");
        }
        return l;
    }

    private void cargarComboEmpleados() {
        this.cmbPersonal.setModel(new ModeloCombo(fachada.getEmpleados()));
    }

    public void ponerFoto(Object obj) {
        ImageIcon img = null;
        if (obj != null) {
            modelo.Personal emp = (modelo.Personal) obj;

            if (emp.getFoto() != null) {
                img = new ImageIcon(emp.getFoto());
            } else {
                img = this.icono;
            }
        } else {
            img = this.icono;
        }
        if (img.getIconWidth() > 90) {
            img = new ImageIcon(img.getImage().getScaledInstance(120, 120, Image.SCALE_DEFAULT));
        }
        this.lblFoto.setIcon(img);
    }

    private void setDatos(List data) {
        ((ModeloCombo) this.cmbPersonal.getModel()).setElementoxID(data.get(0).toString());
        this.ponerFoto(cmbPersonal.getSelectedItem());
        this.txtPassw.setText((String) data.get(1));
        this.txtPassw2.setText((String) data.get(1));
        this.cmbTipo.setSelectedIndex((Integer) data.get(2));
        this.cmbPersonal.updateUI();
    }

    public void escuchadorEvento(Object obj, String propiedad, Object valor) {
        if (propiedad.equals(PuntoDeVenta.CARGAR_USUARIO)) {
            this.setDatos((List) valor);
        }
    }

    public void escuchador() {
        navegador1.lblPrimero.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fachada.cargarUsuario(fachada.PRIMERO);

            }
        });

        navegador1.lblAnterior.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fachada.cargarUsuario(fachada.ANTERIOR);

            }
        });
        navegador1.lblSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fachada.cargarUsuario(fachada.SIGUIENTE);

            }
        });
        navegador1.lblUltimo.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fachada.cargarUsuario(fachada.ULTIMO);

            }
        });
    }
}
