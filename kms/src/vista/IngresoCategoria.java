/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IngresoCategoria.java
 *
 * Created on 03-feb-2010, 14:44:43
 */
package vista;

import java.util.ArrayList;
import utilidades.InvalidException;

/**
 *
 * @author Alejandro
 */
public class IngresoCategoria extends javax.swing.JDialog {

    public static boolean esProducto = false, esIngCategoria = false, esIngCargo = false, esUnidad = false, esUbicacion = false, esMarca = false;
    public static boolean esProductoUnidad, esProductoMarca, esProductoUbicacion;
    FachadaInterfaz fachada;

    public IngresoCategoria() {
        initComponents();
//        this.setModal(true);
        fachada = FachadaInterfaz.getInstancia();
        this.setLocationRelativeTo(null);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("NOMBRE");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        btnGuardar();
        this.dispose();


    }//GEN-LAST:event_btnGuardarActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    public void limpiar() {
        txtID.setText("");
        txtNombre.setText("");
    }

    public void btnGuardar() {
        try {
            if (esProducto) {
                fachada.categoria(pasarDatos(), FachadaInterfaz.INSERTAR);
                ProductoVista.cargarComboCategoria();
            } else if (esIngCategoria) {
                fachada.categoria(pasarDatos(), FachadaInterfaz.INSERTAR);
                fachada.actualizarTablaCategoria();
            } else if (esIngCargo) {
                if (TablaCategoria.esCargo) {
                    fachada.cargos(pasarDatos(), FachadaInterfaz.INSERTAR);
                    fachada.actualizarTablaCargo();
                } else {
                    fachada.cargos(pasarDatos(), FachadaInterfaz.INSERTAR);
                    IngresoPersonal.cargarComboCargos();
                }

            } else if (esProductoUnidad) {
                fachada.unidadMedida(pasarDatos(), FachadaInterfaz.INSERTAR);
                ProductoVista.cargarComboUnidadMedida();
            } else if (esUnidad) {
                fachada.unidadMedida(pasarDatos(), FachadaInterfaz.INSERTAR);
                fachada.actualizarTablaUnidad();
            } else if (esProductoMarca) {
                fachada.marca(pasarDatos(), FachadaInterfaz.INSERTAR);
                ProductoVista.cargarComboMarca();
            }else if(esMarca){
                fachada.marca(pasarDatos(), FachadaInterfaz.INSERTAR);
                fachada.actualizarTablaMarca();
                
            }else if (esProductoUbicacion) {
                fachada.ubicacion(pasarDatos(), FachadaInterfaz.INSERTAR);
                ProductoVista.cargarComboUbicacion();
            }else if(esUbicacion){
                 fachada.ubicacion(pasarDatos(), FachadaInterfaz.INSERTAR);
                 fachada.actualizarTablaUbicacion();
            }

        } catch (InvalidException ex) {
        }
    }

    public ArrayList pasarDatos() throws InvalidException {
        ArrayList datos = new ArrayList();
        if (!txtID.getText().equals("")) {
            datos.add(txtID.getText());
        } else {
            throw new InvalidException("Debe Ingresar el ID");
        }
        if (!txtNombre.getText().equals("")) {
            datos.add(txtNombre.getText());
        } else {
            throw new InvalidException("Debe Ingresar el Nombre");
        }
        return datos;
    }

    public void actualizarComboCategoriaProducto() {
        ProductoVista.cargarComboCategoria();
    }

    public static void identificador(int tipo) {
        switch (tipo) {
            case 1: {
                esProducto = true;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }
            case 2: {
                esProducto = false;
                esIngCategoria = true;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }
            case 3: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = true;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }
            case 4: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = true;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }
            case 5: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = true;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }
            case 6: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = true;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }case 7: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=true;
                esProductoMarca=false;
                esProductoUbicacion=false;
                break;
            }case 8: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=true;
                esProductoUbicacion=false;
                break;
            }case 9: {
                esProducto = false;
                esIngCategoria = false;
                esIngCargo = false;
                esUnidad = false;
                esUbicacion = false;
                esMarca = false;
                esProductoUnidad=false;
                esProductoMarca=false;
                esProductoUbicacion=true;
                break;
            }

        }
    }
}
