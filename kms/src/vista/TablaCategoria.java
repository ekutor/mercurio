package vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import modelo.ModeloTablaGenerico;

/**
 *
 * @author Alejandro
 */
public class TablaCategoria extends javax.swing.JDialog implements ListSelectionListener {

    private static String nombresTabla[] = {"ID", "NOMBRE"};
    public static boolean esCategoria = false, esCargo = false, esMarca = false, esUbicacion = false, esUnidad = false;
    private FachadaInterfaz fachada;

    public TablaCategoria(List v) {
//        this.setModal(true);
        initComponents();

        fachada = FachadaInterfaz.getInstancia();
        tabla.getSelectionModel().addListSelectionListener(this);
        cargarTabla(v);
        habilitarCampos(false);
        this.setLocationRelativeTo(null);
        setVisible(true);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setRollover(true);

        btnAgregar.setText("Agregar");
        btnAgregar.setFocusable(false);
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAgregar);

        btnModificar.setText("Modificar");
        btnModificar.setFocusable(false);
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnModificar);

        btnEliminar.setText("Eliminar");
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setText("ID");

        jLabel2.setText("Nombre");

        tabla.setBackground(new java.awt.Color(225, 235, 244));
        tabla.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                        .addGap(14, 14, 14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(350, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        new IngresoCategoria();
        if (esCategoria) {
            esCategoria(true);
        } else if (esCargo) {
            esCargo(true);
        } else if (esUbicacion) {
            esUbicacion(true);
        } else if (esMarca) {
            esMarca(true);
        } else if (esUnidad) {
            esUnidad(true);
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (this.btnModificar.getText().equals("Modificar")) {
            habilitarCampos(true);
            txtID.setEnabled(false);
            this.btnModificar.setText("Actualizar");
        } else if (this.btnModificar.getText().equals("Actualizar")) {
            if (esCategoria) {
                actualizarCategoria();
            } else if (esCargo) {
                actualizarCargo();
            } else if (esUbicacion) {
                actualizarUbicacion();
            } else if (esMarca) {
                actualizarMarca();
            } else if (esUnidad) {
                actualizarUnidad();
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (esCategoria) {
            eliminar("categoria");
        } else if (esCargo) {
            eliminar("cargo");
        } else if (esUbicacion) {
            eliminar("ubicacion");
        } else if (esMarca) {
            eliminar("marca");
        } else if (esUnidad) {
            eliminar("unidad");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private static javax.swing.JTable tabla;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    public static void cargarTabla(List v) {
        ModeloTablaGenerico m = new ModeloTablaGenerico(v);
        m.establecerColumNom(nombresTabla);
        tabla.setModel(m);
        tabla.updateUI();
    }

    public void valueChanged(ListSelectionEvent e) {
        try {
            String a = ((ModeloTablaGenerico) tabla.getModel()).getValueAt(tabla.getSelectedRow(), 0).toString();
            txtID.setText(a);
            a = ((ModeloTablaGenerico) tabla.getModel()).getValueAt(tabla.getSelectedRow(), 1).toString();
            txtNombre.setText(a);
        } catch (Exception a) {
        }
    }

    public void habilitarCampos(boolean b) {
        txtID.setEnabled(b);
        txtNombre.setEnabled(b);
    }

    public ArrayList datos() {
        ArrayList d = new ArrayList();
        d.add(txtID.getText());
        d.add(txtNombre.getText());
        return d;
    }

    public void actualizarCategoria() {
        habilitarCampos(false);
        this.btnModificar.setText("Modificar");
        fachada.categoria(datos(), FachadaInterfaz.MODIFICAR);
        fachada.actualizarTablaCategoria();
    }

    public void actualizarCargo() {
        habilitarCampos(false);
        this.btnModificar.setText("Modificar");
        fachada.cargos(datos(), FachadaInterfaz.MODIFICAR);
        fachada.actualizarTablaCargo();
    }

    public void actualizarUbicacion() {
        habilitarCampos(false);
        this.btnModificar.setText("Modificar");
        fachada.ubicacion(datos(), FachadaInterfaz.MODIFICAR);
        fachada.actualizarTablaUbicacion();
    }

    public void actualizarMarca() {
        habilitarCampos(false);
        this.btnModificar.setText("Modificar");
        fachada.marca(datos(), FachadaInterfaz.MODIFICAR);
        fachada.actualizarTablaMarca();
    }

    public void actualizarUnidad() {
        habilitarCampos(false);
        this.btnModificar.setText("Modificar");
        fachada.unidadMedida(datos(), FachadaInterfaz.MODIFICAR);
        fachada.actualizarTablaUnidad();
    }

    public void eliminar(String tipo) {
        System.out.println("entreee");
        int r = JOptionPane.showConfirmDialog(null, "Esta Seguro De Eliminar Este Registro?", "Eliminar Registro", JOptionPane.YES_NO_CANCEL_OPTION);
        if (r == 0) {
            if (tipo.equalsIgnoreCase("categoria")) {
                if (!txtID.getText().equals("")) {

                    fachada.categoria(txtID.getText(), FachadaInterfaz.ELIMINAR);
                    limpiar();
                    fachada.actualizarTablaCategoria();
                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar Una Categoria");
                }

            } else if (tipo.equalsIgnoreCase("cargo")) {
                if (!txtID.getText().equals("")) {

                    fachada.cargos(txtID.getText(), FachadaInterfaz.ELIMINAR);
                    limpiar();
                    fachada.actualizarTablaCargo();

                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar Un Cargo");
                }
            } else if (tipo.equalsIgnoreCase("ubicacion")) {
                if (!txtID.getText().equals("")) {

                    fachada.ubicacion(txtID.getText(), FachadaInterfaz.ELIMINAR);
                    limpiar();
                    fachada.actualizarTablaUbicacion();

                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar Una Ubicacion");
                }
            } else if (tipo.equalsIgnoreCase("marca")) {
                if (!txtID.getText().equals("")) {

                    fachada.marca(txtID.getText(), FachadaInterfaz.ELIMINAR);
                    limpiar();
                    fachada.actualizarTablaMarca();

                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar Una Marca");
                }
            } else if (tipo.equalsIgnoreCase("unidad")) {
                if (!txtID.getText().equals("")) {

                    fachada.unidadMedida(txtID.getText(), FachadaInterfaz.ELIMINAR);
                    limpiar();
                    fachada.actualizarTablaUnidad();

                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar Una Unidad");
                }
            }
        }
    }

    public void limpiar() {
        txtID.setText("");
        txtNombre.setText("");
    }

    public static void esCategoria(boolean b) {
        IngresoCategoria.identificador(2);
        IngresoCategoria.esIngCategoria = b;
        IngresoCategoria.esIngCargo = false;
        IngresoCategoria.esProducto = false;
        IngresoCategoria.esMarca = false;
        IngresoCategoria.esUnidad = false;
        IngresoCategoria.esUbicacion = false;
        esCategoria = b;
        esCargo = false;
        esMarca = false;
        esUbicacion = false;
        esUnidad = false;
    }

    public static void esCargo(boolean b) {

        IngresoCategoria.identificador(3);
        IngresoCategoria.esIngCargo = b;
        IngresoCategoria.esIngCategoria = false;
        IngresoCategoria.esProducto = false;
        IngresoCategoria.esMarca = false;
        IngresoCategoria.esUnidad = false;
        IngresoCategoria.esUbicacion = false;
        esCategoria = false;
        esCargo = b;
        esMarca = false;
        esUbicacion = false;
        esUnidad = false;

    }

    public static void esUnidad(boolean b) {

        IngresoCategoria.identificador(4);
        IngresoCategoria.esIngCargo = false;
        IngresoCategoria.esIngCategoria = false;
        IngresoCategoria.esProducto = false;
        IngresoCategoria.esMarca = false;
        IngresoCategoria.esUnidad = b;
        IngresoCategoria.esUbicacion = false;
        esCategoria = false;
        esCargo = false;
        esMarca = false;
        esUbicacion = false;
        esUnidad = b;
    }

    public static void esMarca(boolean b) {

        IngresoCategoria.identificador(6);
        IngresoCategoria.esIngCargo = false;
        IngresoCategoria.esIngCategoria = false;
        IngresoCategoria.esProducto = false;
        IngresoCategoria.esMarca = b;
        IngresoCategoria.esUnidad = false;
        IngresoCategoria.esUbicacion = false;
        esCategoria = false;
        esCargo = false;
        esMarca = b;
        esUbicacion = false;
        esUnidad = false;
    }

    public static void esUbicacion(boolean b) {

        IngresoCategoria.identificador(5);
        IngresoCategoria.esIngCargo = false;
        IngresoCategoria.esIngCategoria = false;
        IngresoCategoria.esProducto = false;
        IngresoCategoria.esMarca = false;
        IngresoCategoria.esUnidad = false;
        IngresoCategoria.esUbicacion = b;
        esCategoria = false;
        esCargo = false;
        esMarca = false;
        esUbicacion = b;
        esUnidad = false;
    }
}
